// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxesManager.Infrastructure.Persistence;

#nullable disable

namespace TaxesManager.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(TaxesManagementDbContext))]
    partial class TaxesManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaxesManager.Domain.Municipalities.Municipality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Municipalities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b24d1aa-0761-4843-99b9-e3a93bc2561e"),
                            Name = "Copenhagen"
                        });
                });

            modelBuilder.Entity("TaxesManager.Domain.Taxes.Tax", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("Decimal(3, 2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("Date");

                    b.Property<Guid?>("MunicipalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("Taxes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3003643-1945-4787-8779-83913f213f64"),
                            Amount = 0.2m,
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MunicipalityId = new Guid("2b24d1aa-0761-4843-99b9-e3a93bc2561e"),
                            Schedule = "Yearly",
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e473a265-911e-4cb7-8fdb-330cc6e8277a"),
                            Amount = 0.4m,
                            EndDate = new DateTime(2023, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MunicipalityId = new Guid("2b24d1aa-0761-4843-99b9-e3a93bc2561e"),
                            Schedule = "Monthly",
                            StartDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5cbbf5e3-d533-4958-94a0-ddcc03142b4e"),
                            Amount = 0.1m,
                            EndDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MunicipalityId = new Guid("2b24d1aa-0761-4843-99b9-e3a93bc2561e"),
                            Schedule = "Daily",
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("216209cc-eed7-4225-a3c1-c1af62ee0606"),
                            Amount = 0.1m,
                            EndDate = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MunicipalityId = new Guid("2b24d1aa-0761-4843-99b9-e3a93bc2561e"),
                            Schedule = "Daily",
                            StartDate = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TaxesManager.Domain.Taxes.Tax", b =>
                {
                    b.HasOne("TaxesManager.Domain.Municipalities.Municipality", null)
                        .WithMany("Taxes")
                        .HasForeignKey("MunicipalityId");
                });

            modelBuilder.Entity("TaxesManager.Domain.Municipalities.Municipality", b =>
                {
                    b.Navigation("Taxes");
                });
#pragma warning restore 612, 618
        }
    }
}
